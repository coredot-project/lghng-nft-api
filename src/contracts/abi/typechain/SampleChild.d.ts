/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface SampleChildInterface extends ethers.utils.Interface {
  functions: {
    "child()": FunctionFragment;
    "father()": FunctionFragment;
    "gramps()": FunctionFragment;
    "initialize(uint256,string,uint256,uint256)": FunctionFragment;
    "isHuman()": FunctionFragment;
    "mother()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "child", values?: undefined): string;
  encodeFunctionData(functionFragment: "father", values?: undefined): string;
  encodeFunctionData(functionFragment: "gramps", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [BigNumberish, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "isHuman", values?: undefined): string;
  encodeFunctionData(functionFragment: "mother", values?: undefined): string;

  decodeFunctionResult(functionFragment: "child", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "father", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "gramps", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "isHuman", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "mother", data: BytesLike): Result;

  events: {
    "Initialized(uint8)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Initialized"): EventFragment;
}

export class SampleChild extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: SampleChildInterface;

  functions: {
    child(overrides?: CallOverrides): Promise<[BigNumber]>;

    "child()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    father(overrides?: CallOverrides): Promise<[BigNumber]>;

    "father()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    gramps(overrides?: CallOverrides): Promise<[string]>;

    "gramps()"(overrides?: CallOverrides): Promise<[string]>;

    "initialize(uint256,string,uint256,uint256)"(
      _mother: BigNumberish,
      _gramps: string,
      _father: BigNumberish,
      _child: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize()"(overrides?: Overrides): Promise<ContractTransaction>;

    "initialize(string,uint256)"(
      _gramps: string,
      _father: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(string)"(
      value: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(uint256)"(
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    isHuman(overrides?: CallOverrides): Promise<[boolean]>;

    "isHuman()"(overrides?: CallOverrides): Promise<[boolean]>;

    mother(overrides?: CallOverrides): Promise<[BigNumber]>;

    "mother()"(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  child(overrides?: CallOverrides): Promise<BigNumber>;

  "child()"(overrides?: CallOverrides): Promise<BigNumber>;

  father(overrides?: CallOverrides): Promise<BigNumber>;

  "father()"(overrides?: CallOverrides): Promise<BigNumber>;

  gramps(overrides?: CallOverrides): Promise<string>;

  "gramps()"(overrides?: CallOverrides): Promise<string>;

  "initialize(uint256,string,uint256,uint256)"(
    _mother: BigNumberish,
    _gramps: string,
    _father: BigNumberish,
    _child: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize()"(overrides?: Overrides): Promise<ContractTransaction>;

  "initialize(string,uint256)"(
    _gramps: string,
    _father: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(string)"(
    value: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(uint256)"(
    value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  isHuman(overrides?: CallOverrides): Promise<boolean>;

  "isHuman()"(overrides?: CallOverrides): Promise<boolean>;

  mother(overrides?: CallOverrides): Promise<BigNumber>;

  "mother()"(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    child(overrides?: CallOverrides): Promise<BigNumber>;

    "child()"(overrides?: CallOverrides): Promise<BigNumber>;

    father(overrides?: CallOverrides): Promise<BigNumber>;

    "father()"(overrides?: CallOverrides): Promise<BigNumber>;

    gramps(overrides?: CallOverrides): Promise<string>;

    "gramps()"(overrides?: CallOverrides): Promise<string>;

    "initialize(uint256,string,uint256,uint256)"(
      _mother: BigNumberish,
      _gramps: string,
      _father: BigNumberish,
      _child: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize()"(overrides?: CallOverrides): Promise<void>;

    "initialize(string,uint256)"(
      _gramps: string,
      _father: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(string)"(
      value: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(uint256)"(
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    isHuman(overrides?: CallOverrides): Promise<boolean>;

    "isHuman()"(overrides?: CallOverrides): Promise<boolean>;

    mother(overrides?: CallOverrides): Promise<BigNumber>;

    "mother()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {
    Initialized(version: null): EventFilter;
  };

  estimateGas: {
    child(overrides?: CallOverrides): Promise<BigNumber>;

    "child()"(overrides?: CallOverrides): Promise<BigNumber>;

    father(overrides?: CallOverrides): Promise<BigNumber>;

    "father()"(overrides?: CallOverrides): Promise<BigNumber>;

    gramps(overrides?: CallOverrides): Promise<BigNumber>;

    "gramps()"(overrides?: CallOverrides): Promise<BigNumber>;

    "initialize(uint256,string,uint256,uint256)"(
      _mother: BigNumberish,
      _gramps: string,
      _father: BigNumberish,
      _child: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize()"(overrides?: Overrides): Promise<BigNumber>;

    "initialize(string,uint256)"(
      _gramps: string,
      _father: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize(string)"(
      value: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize(uint256)"(
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    isHuman(overrides?: CallOverrides): Promise<BigNumber>;

    "isHuman()"(overrides?: CallOverrides): Promise<BigNumber>;

    mother(overrides?: CallOverrides): Promise<BigNumber>;

    "mother()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    child(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "child()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    father(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "father()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    gramps(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "gramps()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "initialize(uint256,string,uint256,uint256)"(
      _mother: BigNumberish,
      _gramps: string,
      _father: BigNumberish,
      _child: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    "initialize(string,uint256)"(
      _gramps: string,
      _father: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(string)"(
      value: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(uint256)"(
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    isHuman(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "isHuman()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    mother(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "mother()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
