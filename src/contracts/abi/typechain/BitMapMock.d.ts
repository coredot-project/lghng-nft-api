/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface BitMapMockInterface extends ethers.utils.Interface {
  functions: {
    "get(uint256)": FunctionFragment;
    "set(uint256)": FunctionFragment;
    "setTo(uint256,bool)": FunctionFragment;
    "unset(uint256)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "get", values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: "set", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "setTo",
    values: [BigNumberish, boolean]
  ): string;
  encodeFunctionData(functionFragment: "unset", values: [BigNumberish]): string;

  decodeFunctionResult(functionFragment: "get", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "set", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setTo", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "unset", data: BytesLike): Result;

  events: {};
}

export class BitMapMock extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: BitMapMockInterface;

  functions: {
    get(index: BigNumberish, overrides?: CallOverrides): Promise<[boolean]>;

    "get(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    set(
      index: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "set(uint256)"(
      index: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setTo(
      index: BigNumberish,
      value: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setTo(uint256,bool)"(
      index: BigNumberish,
      value: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    unset(
      index: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "unset(uint256)"(
      index: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  get(index: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

  "get(uint256)"(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  set(index: BigNumberish, overrides?: Overrides): Promise<ContractTransaction>;

  "set(uint256)"(
    index: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setTo(
    index: BigNumberish,
    value: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setTo(uint256,bool)"(
    index: BigNumberish,
    value: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  unset(
    index: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "unset(uint256)"(
    index: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    get(index: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

    "get(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    set(index: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "set(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setTo(
      index: BigNumberish,
      value: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "setTo(uint256,bool)"(
      index: BigNumberish,
      value: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    unset(index: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "unset(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    get(index: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "get(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    set(index: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "set(uint256)"(
      index: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setTo(
      index: BigNumberish,
      value: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setTo(uint256,bool)"(
      index: BigNumberish,
      value: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    unset(index: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "unset(uint256)"(
      index: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    get(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "get(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    set(
      index: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "set(uint256)"(
      index: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setTo(
      index: BigNumberish,
      value: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setTo(uint256,bool)"(
      index: BigNumberish,
      value: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    unset(
      index: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "unset(uint256)"(
      index: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
