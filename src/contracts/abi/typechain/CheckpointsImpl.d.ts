/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface CheckpointsImplInterface extends ethers.utils.Interface {
  functions: {
    "getAtBlock(uint256)": FunctionFragment;
    "latest()": FunctionFragment;
    "length()": FunctionFragment;
    "push(uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getAtBlock",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "latest", values?: undefined): string;
  encodeFunctionData(functionFragment: "length", values?: undefined): string;
  encodeFunctionData(functionFragment: "push", values: [BigNumberish]): string;

  decodeFunctionResult(functionFragment: "getAtBlock", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "latest", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "length", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "push", data: BytesLike): Result;

  events: {};
}

export class CheckpointsImpl extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: CheckpointsImplInterface;

  functions: {
    getAtBlock(
      blockNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getAtBlock(uint256)"(
      blockNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    latest(overrides?: CallOverrides): Promise<[BigNumber]>;

    "latest()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    length(overrides?: CallOverrides): Promise<[BigNumber]>;

    "length()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    push(
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "push(uint256)"(
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  getAtBlock(
    blockNumber: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAtBlock(uint256)"(
    blockNumber: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  latest(overrides?: CallOverrides): Promise<BigNumber>;

  "latest()"(overrides?: CallOverrides): Promise<BigNumber>;

  length(overrides?: CallOverrides): Promise<BigNumber>;

  "length()"(overrides?: CallOverrides): Promise<BigNumber>;

  push(
    value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "push(uint256)"(
    value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    getAtBlock(
      blockNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAtBlock(uint256)"(
      blockNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    latest(overrides?: CallOverrides): Promise<BigNumber>;

    "latest()"(overrides?: CallOverrides): Promise<BigNumber>;

    length(overrides?: CallOverrides): Promise<BigNumber>;

    "length()"(overrides?: CallOverrides): Promise<BigNumber>;

    push(
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    "push(uint256)"(
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;
  };

  filters: {};

  estimateGas: {
    getAtBlock(
      blockNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAtBlock(uint256)"(
      blockNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    latest(overrides?: CallOverrides): Promise<BigNumber>;

    "latest()"(overrides?: CallOverrides): Promise<BigNumber>;

    length(overrides?: CallOverrides): Promise<BigNumber>;

    "length()"(overrides?: CallOverrides): Promise<BigNumber>;

    push(value: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "push(uint256)"(
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getAtBlock(
      blockNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAtBlock(uint256)"(
      blockNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    latest(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "latest()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    length(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "length()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    push(
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "push(uint256)"(
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
