/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface EnumerableBytes32SetMockInterface extends ethers.utils.Interface {
  functions: {
    "add(bytes32)": FunctionFragment;
    "at(uint256)": FunctionFragment;
    "contains(bytes32)": FunctionFragment;
    "length()": FunctionFragment;
    "remove(bytes32)": FunctionFragment;
    "values()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "add", values: [BytesLike]): string;
  encodeFunctionData(functionFragment: "at", values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: "contains", values: [BytesLike]): string;
  encodeFunctionData(functionFragment: "length", values?: undefined): string;
  encodeFunctionData(functionFragment: "remove", values: [BytesLike]): string;
  encodeFunctionData(functionFragment: "values", values?: undefined): string;

  decodeFunctionResult(functionFragment: "add", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "at", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "contains", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "length", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "remove", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "values", data: BytesLike): Result;

  events: {
    "OperationResult(bool)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OperationResult"): EventFragment;
}

export class EnumerableBytes32SetMock extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: EnumerableBytes32SetMockInterface;

  functions: {
    add(value: BytesLike, overrides?: Overrides): Promise<ContractTransaction>;

    "add(bytes32)"(
      value: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    at(index: BigNumberish, overrides?: CallOverrides): Promise<[string]>;

    "at(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    contains(value: BytesLike, overrides?: CallOverrides): Promise<[boolean]>;

    "contains(bytes32)"(
      value: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    length(overrides?: CallOverrides): Promise<[BigNumber]>;

    "length()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    remove(
      value: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "remove(bytes32)"(
      value: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    values(overrides?: CallOverrides): Promise<[string[]]>;

    "values()"(overrides?: CallOverrides): Promise<[string[]]>;
  };

  add(value: BytesLike, overrides?: Overrides): Promise<ContractTransaction>;

  "add(bytes32)"(
    value: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  at(index: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "at(uint256)"(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  contains(value: BytesLike, overrides?: CallOverrides): Promise<boolean>;

  "contains(bytes32)"(
    value: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  length(overrides?: CallOverrides): Promise<BigNumber>;

  "length()"(overrides?: CallOverrides): Promise<BigNumber>;

  remove(value: BytesLike, overrides?: Overrides): Promise<ContractTransaction>;

  "remove(bytes32)"(
    value: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  values(overrides?: CallOverrides): Promise<string[]>;

  "values()"(overrides?: CallOverrides): Promise<string[]>;

  callStatic: {
    add(value: BytesLike, overrides?: CallOverrides): Promise<void>;

    "add(bytes32)"(value: BytesLike, overrides?: CallOverrides): Promise<void>;

    at(index: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "at(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    contains(value: BytesLike, overrides?: CallOverrides): Promise<boolean>;

    "contains(bytes32)"(
      value: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    length(overrides?: CallOverrides): Promise<BigNumber>;

    "length()"(overrides?: CallOverrides): Promise<BigNumber>;

    remove(value: BytesLike, overrides?: CallOverrides): Promise<void>;

    "remove(bytes32)"(
      value: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    values(overrides?: CallOverrides): Promise<string[]>;

    "values()"(overrides?: CallOverrides): Promise<string[]>;
  };

  filters: {
    OperationResult(result: null): EventFilter;
  };

  estimateGas: {
    add(value: BytesLike, overrides?: Overrides): Promise<BigNumber>;

    "add(bytes32)"(value: BytesLike, overrides?: Overrides): Promise<BigNumber>;

    at(index: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "at(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    contains(value: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "contains(bytes32)"(
      value: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    length(overrides?: CallOverrides): Promise<BigNumber>;

    "length()"(overrides?: CallOverrides): Promise<BigNumber>;

    remove(value: BytesLike, overrides?: Overrides): Promise<BigNumber>;

    "remove(bytes32)"(
      value: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    values(overrides?: CallOverrides): Promise<BigNumber>;

    "values()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    add(value: BytesLike, overrides?: Overrides): Promise<PopulatedTransaction>;

    "add(bytes32)"(
      value: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    at(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "at(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    contains(
      value: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "contains(bytes32)"(
      value: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    length(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "length()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    remove(
      value: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "remove(bytes32)"(
      value: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    values(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "values()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
