/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Bytes32DequeMock } from "../Bytes32DequeMock";

export class Bytes32DequeMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Bytes32DequeMock> {
    return super.deploy(overrides || {}) as Promise<Bytes32DequeMock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Bytes32DequeMock {
    return super.attach(address) as Bytes32DequeMock;
  }
  connect(signer: Signer): Bytes32DequeMock__factory {
    return super.connect(signer) as Bytes32DequeMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Bytes32DequeMock {
    return new Contract(address, _abi, signerOrProvider) as Bytes32DequeMock;
  }
}

const _abi = [
  {
    inputs: [],
    name: "Empty",
    type: "error",
  },
  {
    inputs: [],
    name: "OutOfBounds",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "OperationResult",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "at",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "back",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "clear",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "empty",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "front",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "popBack",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "popFront",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "pushBack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "pushFront",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610cc6806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638dde0840116100665780638dde084014610123578063ba75bbd814610141578063c39f130c1461015f578063e0886f901461017b578063f2a75fe4146101ab5761009e565b80630df3aa97146100a3578063107dfb64146100bf5780631f7b6d32146100dd57806352efea6e146100fb57806384d9fedd14610105575b600080fd5b6100bd60048036038101906100b89190610974565b6101c9565b005b6100c76101e0565b6040516100d491906109b0565b60405180910390f35b6100e561022d565b6040516100f291906109e4565b60405180910390f35b61010361023e565b005b61010d61024a565b60405161011a91906109b0565b60405180910390f35b61012b610297565b60405161013891906109b0565b60405180910390f35b6101496102a8565b60405161015691906109b0565b60405180910390f35b61017960048036038101906101749190610974565b6102b9565b005b61019560048036038101906101909190610a2b565b6102d0565b6040516101a291906109b0565b60405180910390f35b6101b36102ed565b6040516101c09190610a73565b60405180910390f35b6101dd8160006102fe90919063ffffffff16565b50565b6000806101ed600061037a565b90507f103eed58ce9f94500a2c4079d50a53cb9a602378270d152a3004209a6a588e1d8160405161021e91906109b0565b60405180910390a18091505090565b60006102396000610456565b905090565b610248600061048a565b565b600080610257600061050b565b90507f103eed58ce9f94500a2c4079d50a53cb9a602378270d152a3004209a6a588e1d8160405161028891906109b0565b60405180910390a18091505090565b60006102a360006105e7565b905090565b60006102b46000610666565b905090565b6102cd8160006106e290919063ffffffff16565b50565b60006102e682600061075e90919063ffffffff16565b9050919050565b60006102f96000610808565b905090565b600060018360000160009054906101000a9004600f0b0390508183600101600083600f0b600f0b815260200190815260200160002081905550808360000160006101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff160217905550505050565b600061038582610808565b156103bc576040517f3db2a12a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018360000160109054906101000a9004600f0b03905082600101600082600f0b600f0b815260200190815260200160002054915082600101600082600f0b600f0b815260200190815260200160002060009055808360000160106101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff16021790555050919050565b60008160000160009054906101000a9004600f0b600f0b8260000160109054906101000a9004600f0b600f0b039050919050565b60008160000160006101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff16021790555060008160000160106101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff16021790555050565b600061051682610808565b1561054d576040517f3db2a12a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260000160009054906101000a9004600f0b905082600101600082600f0b600f0b815260200190815260200160002054915082600101600082600f0b600f0b815260200190815260200160002060009055600181018360000160006101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff16021790555050919050565b60006105f282610808565b15610629576040517f3db2a12a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018360000160109054906101000a9004600f0b03905082600101600082600f0b600f0b815260200190815260200160002054915050919050565b600061067182610808565b156106a8576040517f3db2a12a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260000160009054906101000a9004600f0b905082600101600082600f0b600f0b815260200190815260200160002054915050919050565b60008260000160109054906101000a9004600f0b90508183600101600083600f0b600f0b815260200190815260200160002081905550600181018360000160106101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff160217905550505050565b60008061079161076d8461083d565b8560000160009054906101000a9004600f0b600f0b61078c9190610ac7565b6108aa565b90508360000160109054906101000a9004600f0b600f0b81600f0b126107e3576040517fb4120f1400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83600101600082600f0b600f0b81526020019081526020016000205491505092915050565b60008160000160009054906101000a9004600f0b600f0b8260000160109054906101000a9004600f0b600f0b13159050919050565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211156108a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089990610bde565b60405180910390fd5b819050919050565b60007fffffffffffffffffffffffffffffffff80000000000000000000000000000000600f0b82121580156108f257506f7fffffffffffffffffffffffffffffff600f0b8213155b610931576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092890610c70565b60405180910390fd5b819050919050565b600080fd5b6000819050919050565b6109518161093e565b811461095c57600080fd5b50565b60008135905061096e81610948565b92915050565b60006020828403121561098a57610989610939565b5b60006109988482850161095f565b91505092915050565b6109aa8161093e565b82525050565b60006020820190506109c560008301846109a1565b92915050565b6000819050919050565b6109de816109cb565b82525050565b60006020820190506109f960008301846109d5565b92915050565b610a08816109cb565b8114610a1357600080fd5b50565b600081359050610a25816109ff565b92915050565b600060208284031215610a4157610a40610939565b5b6000610a4f84828501610a16565b91505092915050565b60008115159050919050565b610a6d81610a58565b82525050565b6000602082019050610a886000830184610a64565b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ad282610a8e565b9150610add83610a8e565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03831360008312151615610b1857610b17610a98565b5b817f8000000000000000000000000000000000000000000000000000000000000000038312600083121615610b5057610b4f610a98565b5b828201905092915050565b600082825260208201905092915050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e206160008201527f6e20696e74323536000000000000000000000000000000000000000000000000602082015250565b6000610bc8602883610b5b565b9150610bd382610b6c565b604082019050919050565b60006020820190508181036000830152610bf781610bbb565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203160008201527f3238206269747300000000000000000000000000000000000000000000000000602082015250565b6000610c5a602783610b5b565b9150610c6582610bfe565b604082019050919050565b60006020820190508181036000830152610c8981610c4d565b905091905056fea2646970667358221220faadf4cb771e2d1e10991e8a479cf7901aedd3a557bf3a9c46ff0c69f51f243e64736f6c63430008090033";
