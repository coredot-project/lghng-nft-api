/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { AddressToUintMapMock } from "../AddressToUintMapMock";

export class AddressToUintMapMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<AddressToUintMapMock> {
    return super.deploy(overrides || {}) as Promise<AddressToUintMapMock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AddressToUintMapMock {
    return super.attach(address) as AddressToUintMapMock;
  }
  connect(signer: Signer): AddressToUintMapMock__factory {
    return super.connect(signer) as AddressToUintMapMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressToUintMapMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AddressToUintMapMock;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    name: "OperationResult",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "at",
    outputs: [
      {
        internalType: "address",
        name: "key",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "key",
        type: "address",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "key",
        type: "address",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "key",
        type: "address",
      },
      {
        internalType: "string",
        name: "errorMessage",
        type: "string",
      },
    ],
    name: "getWithMessage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "key",
        type: "address",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "key",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "key",
        type: "address",
      },
    ],
    name: "tryGet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e54806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80635dbe47e81161005b5780635dbe47e814610113578063864083af14610143578063c2bc2efc14610174578063e0886f90146101a457610088565b80631f7b6d321461008d57806329092d0e146100ab5780633825d828146100c75780633a992ce7146100e3575b600080fd5b6100956101d5565b6040516100a29190610991565b60405180910390f35b6100c560048036038101906100c09190610a14565b6101e6565b005b6100e160048036038101906100dc9190610a6d565b610239565b005b6100fd60048036038101906100f89190610b12565b61028f565b60405161010a9190610991565b60405180910390f35b61012d60048036038101906101289190610a14565b6102f4565b60405161013a9190610b8d565b60405180910390f35b61015d60048036038101906101589190610a14565b610311565b60405161016b929190610ba8565b60405180910390f35b61018e60048036038101906101899190610a14565b610331565b60405161019b9190610991565b60405180910390f35b6101be60048036038101906101b99190610bd1565b61034e565b6040516101cc929190610c0d565b60405180910390f35b60006101e1600061036e565b905090565b60006101fc82600061038390919063ffffffff16565b90507fed9840e0775590557ad736875d96c95cf1458b766335f74339951a32c82a9e338160405161022d9190610b8d565b60405180910390a15050565b6000610251838360006103b39092919063ffffffff16565b90507fed9840e0775590557ad736875d96c95cf1458b766335f74339951a32c82a9e33816040516102829190610b8d565b60405180910390a1505050565b60006102eb8484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505060006103e89092919063ffffffff16565b90509392505050565b600061030a82600061041d90919063ffffffff16565b9050919050565b60008061032883600061044d90919063ffffffff16565b91509150915091565b600061034782600061048f90919063ffffffff16565b9050919050565b6000806103658360006104c290919063ffffffff16565b91509150915091565b600061037c826000016104ee565b9050919050565b60006103ab836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610503565b905092915050565b60006103df846000018473ffffffffffffffffffffffffffffffffffffffff1660001b8460001b61053c565b90509392505050565b6000610411846000018473ffffffffffffffffffffffffffffffffffffffff1660001b84610577565b60001c90509392505050565b6000610445836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6105f8565b905092915050565b600080600080610479866000018673ffffffffffffffffffffffffffffffffffffffff1660001b610618565b91509150818160001c9350935050509250929050565b60006104b7836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610668565b60001c905092915050565b6000806000806104d586600001866106e4565b915091508160001c8160001c9350935050509250929050565b60006104fc82600001610724565b9050919050565b600082600201600083815260200190815260200160002060009055610534828460000161073990919063ffffffff16565b905092915050565b6000818460020160008581526020019081526020016000208190555061056e838560000161075090919063ffffffff16565b90509392505050565b6000808460020160008581526020019081526020016000205490506000801b811415806105aa57506105a985856105f8565b5b83906105ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e39190610ccf565b60405180910390fd5b50809150509392505050565b6000610610828460000161076790919063ffffffff16565b905092915050565b60008060008460020160008581526020019081526020016000205490506000801b8114156106585761064a85856105f8565b6000801b9250925050610661565b60018192509250505b9250929050565b6000808360020160008481526020019081526020016000205490506000801b8114158061069b575061069a84846105f8565b5b6106da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d190610d3d565b60405180910390fd5b8091505092915050565b60008060006106ff848660000161077e90919063ffffffff16565b9050808560020160008381526020019081526020016000205492509250509250929050565b600061073282600001610795565b9050919050565b600061074883600001836107a6565b905092915050565b600061075f83600001836108ba565b905092915050565b6000610776836000018361092a565b905092915050565b600061078d836000018361094d565b905092915050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020549050600081146108ae5760006001826107d89190610d8c565b90506000600186600001805490506107f09190610d8c565b905081811461085f57600086600001828154811061081157610810610dc0565b5b906000526020600020015490508087600001848154811061083557610834610dc0565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b8560000180548061087357610872610def565b5b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506108b4565b60009150505b92915050565b60006108c6838361092a565b61091f578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610924565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b600082600001828154811061096557610964610dc0565b5b9060005260206000200154905092915050565b6000819050919050565b61098b81610978565b82525050565b60006020820190506109a66000830184610982565b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109e1826109b6565b9050919050565b6109f1816109d6565b81146109fc57600080fd5b50565b600081359050610a0e816109e8565b92915050565b600060208284031215610a2a57610a296109ac565b5b6000610a38848285016109ff565b91505092915050565b610a4a81610978565b8114610a5557600080fd5b50565b600081359050610a6781610a41565b92915050565b60008060408385031215610a8457610a836109ac565b5b6000610a92858286016109ff565b9250506020610aa385828601610a58565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f840112610ad257610ad1610aad565b5b8235905067ffffffffffffffff811115610aef57610aee610ab2565b5b602083019150836001820283011115610b0b57610b0a610ab7565b5b9250929050565b600080600060408486031215610b2b57610b2a6109ac565b5b6000610b39868287016109ff565b935050602084013567ffffffffffffffff811115610b5a57610b596109b1565b5b610b6686828701610abc565b92509250509250925092565b60008115159050919050565b610b8781610b72565b82525050565b6000602082019050610ba26000830184610b7e565b92915050565b6000604082019050610bbd6000830185610b7e565b610bca6020830184610982565b9392505050565b600060208284031215610be757610be66109ac565b5b6000610bf584828501610a58565b91505092915050565b610c07816109d6565b82525050565b6000604082019050610c226000830185610bfe565b610c2f6020830184610982565b9392505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c70578082015181840152602081019050610c55565b83811115610c7f576000848401525b50505050565b6000601f19601f8301169050919050565b6000610ca182610c36565b610cab8185610c41565b9350610cbb818560208601610c52565b610cc481610c85565b840191505092915050565b60006020820190508181036000830152610ce98184610c96565b905092915050565b7f456e756d657261626c654d61703a206e6f6e6578697374656e74206b65790000600082015250565b6000610d27601e83610c41565b9150610d3282610cf1565b602082019050919050565b60006020820190508181036000830152610d5681610d1a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d9782610978565b9150610da283610978565b925082821015610db557610db4610d5d565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220a05a0015d168a3721f5c554dafb9a2d0bf975d6c3f7b5460bf525c9f246491f764736f6c63430008090033";
