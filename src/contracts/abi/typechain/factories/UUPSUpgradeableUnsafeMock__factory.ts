/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { UUPSUpgradeableUnsafeMock } from "../UUPSUpgradeableUnsafeMock";

export class UUPSUpgradeableUnsafeMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<UUPSUpgradeableUnsafeMock> {
    return super.deploy(overrides || {}) as Promise<UUPSUpgradeableUnsafeMock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UUPSUpgradeableUnsafeMock {
    return super.attach(address) as UUPSUpgradeableUnsafeMock;
  }
  connect(signer: Signer): UUPSUpgradeableUnsafeMock__factory {
    return super.connect(signer) as UUPSUpgradeableUnsafeMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UUPSUpgradeableUnsafeMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UUPSUpgradeableUnsafeMock;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "current",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decrement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b50608051610be261005f60003960006101930152610be26000f3fe6080604052600436106100705760003560e01c806352d1902d1161004e57806352d1902d146100d15780639fa6a6e3146100fc578063d09de08a14610127578063d826f88f1461013e57610070565b80632baeceb7146100755780633659cfe61461008c5780634f1ef286146100b5575b600080fd5b34801561008157600080fd5b5061008a610155565b005b34801561009857600080fd5b506100b360048036038101906100ae919061064a565b610161565b005b6100cf60048036038101906100ca91906107bd565b61017f565b005b3480156100dd57600080fd5b506100e661018f565b6040516100f39190610832565b60405180910390f35b34801561010857600080fd5b50610111610248565b60405161011e9190610866565b60405180910390f35b34801561013357600080fd5b5061013c610259565b005b34801561014a57600080fd5b50610153610265565b005b61015f6000610271565b565b61017c816040518060200160405280600081525060006102cd565b50565b61018b828260006102cd565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461021f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021690610904565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b600061025460006102f9565b905090565b6102636000610307565b565b61026f600061031d565b565b600081600001549050600081116102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b490610970565b60405180910390fd5b6001810382600001819055505050565b6102d68361032a565b6000825111806102e35750805b156102f4576102f28383610379565b505b505050565b600081600001549050919050565b6001816000016000828254019250508190555050565b6000816000018190555050565b610333816103a6565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b606061039e8383604051806060016040528060278152602001610b866027913961045f565b905092915050565b6103af816104e5565b6103ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e590610a02565b60405180910390fd5b8061041b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610508565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516104899190610a9c565b600060405180830381855af49150503d80600081146104c4576040519150601f19603f3d011682016040523d82523d6000602084013e6104c9565b606091505b50915091506104da86838387610512565b925050509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b606083156105755760008351141561056d5761052d856104e5565b61056c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056390610aff565b60405180910390fd5b5b829050610580565b61057f8383610588565b5b949350505050565b60008251111561059b5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cf9190610b63565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610617826105ec565b9050919050565b6106278161060c565b811461063257600080fd5b50565b6000813590506106448161061e565b92915050565b6000602082840312156106605761065f6105e2565b5b600061066e84828501610635565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106ca82610681565b810181811067ffffffffffffffff821117156106e9576106e8610692565b5b80604052505050565b60006106fc6105d8565b905061070882826106c1565b919050565b600067ffffffffffffffff82111561072857610727610692565b5b61073182610681565b9050602081019050919050565b82818337600083830152505050565b600061076061075b8461070d565b6106f2565b90508281526020810184848401111561077c5761077b61067c565b5b61078784828561073e565b509392505050565b600082601f8301126107a4576107a3610677565b5b81356107b484826020860161074d565b91505092915050565b600080604083850312156107d4576107d36105e2565b5b60006107e285828601610635565b925050602083013567ffffffffffffffff811115610803576108026105e7565b5b61080f8582860161078f565b9150509250929050565b6000819050919050565b61082c81610819565b82525050565b60006020820190506108476000830184610823565b92915050565b6000819050919050565b6108608161084d565b82525050565b600060208201905061087b6000830184610857565b92915050565b600082825260208201905092915050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c60008201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b60006108ee603883610881565b91506108f982610892565b604082019050919050565b6000602082019050818103600083015261091d816108e1565b9050919050565b7f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000600082015250565b600061095a601b83610881565b915061096582610924565b602082019050919050565b600060208201905081810360008301526109898161094d565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b60006109ec602d83610881565b91506109f782610990565b604082019050919050565b60006020820190508181036000830152610a1b816109df565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610a56578082015181840152602081019050610a3b565b83811115610a65576000848401525b50505050565b6000610a7682610a22565b610a808185610a2d565b9350610a90818560208601610a38565b80840191505092915050565b6000610aa88284610a6b565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000610ae9601d83610881565b9150610af482610ab3565b602082019050919050565b60006020820190508181036000830152610b1881610adc565b9050919050565b600081519050919050565b6000610b3582610b1f565b610b3f8185610881565b9350610b4f818560208601610a38565b610b5881610681565b840191505092915050565b60006020820190508181036000830152610b7d8184610b2a565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122018f505d7960538658a4b98e0177e6df2156f455d5443314e6aab7e17386ff0cc64736f6c63430008090033";
