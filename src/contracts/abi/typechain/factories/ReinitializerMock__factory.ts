/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ReinitializerMock } from "../ReinitializerMock";

export class ReinitializerMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ReinitializerMock> {
    return super.deploy(overrides || {}) as Promise<ReinitializerMock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ReinitializerMock {
    return super.attach(address) as ReinitializerMock;
  }
  connect(signer: Signer): ReinitializerMock__factory {
    return super.connect(signer) as ReinitializerMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReinitializerMock {
    return new Contract(address, _abi, signerOrProvider) as ReinitializerMock;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "i",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "j",
        type: "uint8",
      },
    ],
    name: "chainReinitialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "disableInitializers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "doStuff",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "i",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "j",
        type: "uint8",
      },
    ],
    name: "nestedReinitialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "i",
        type: "uint8",
      },
    ],
    name: "reinitialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506109a5806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636b2d8f8f1161005b5780636b2d8f8f146100c65780638129fc1c146100e2578063874f33a1146100ec578063f8d6cdba146100f65761007d565b8063073de42e1461008257806331f449001461009e57806361bc221a146100a8575b600080fd5b61009c60048036038101906100979190610605565b610112565b005b6100a6610213565b005b6100b061021d565b6040516100bd919061064b565b60405180910390f35b6100e060048036038101906100db9190610666565b610223565b005b6100ea610239565b005b6100f4610377565b005b610110600480360381019061010b9190610666565b6103e0565b005b80600060019054906101000a900460ff1615801561014257508060ff1660008054906101000a900460ff1660ff16105b610181576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017890610729565b60405180910390fd5b806000806101000a81548160ff021916908360ff1602179055506001600060016101000a81548160ff0219169083151502179055506101be610377565b60008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498816040516102079190610758565b60405180910390a15050565b61021b6104e3565b565b60015481565b61022c82610112565b61023581610112565b5050565b60008060019054906101000a900460ff1615905080801561026a5750600160008054906101000a900460ff1660ff16105b806102975750610279306105a4565b1580156102965750600160008054906101000a900460ff1660ff16145b5b6102d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cd90610729565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610313576001600060016101000a81548160ff0219169083151502179055505b61031b610377565b80156103745760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161036b91906107b8565b60405180910390a15b50565b600060019054906101000a900460ff166103c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bd90610845565b60405180910390fd5b600160008154809291906103d990610894565b9190505550565b81600060019054906101000a900460ff1615801561041057508060ff1660008054906101000a900460ff1660ff16105b61044f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044690610729565b60405180910390fd5b806000806101000a81548160ff021916908360ff1602179055506001600060016101000a81548160ff02191690831515021790555061048d82610112565b60008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498816040516104d69190610758565b60405180910390a1505050565b600060019054906101000a900460ff1615610533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052a9061094f565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff1610156105a25760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff6040516105999190610758565b60405180910390a15b565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600080fd5b600060ff82169050919050565b6105e2816105cc565b81146105ed57600080fd5b50565b6000813590506105ff816105d9565b92915050565b60006020828403121561061b5761061a6105c7565b5b6000610629848285016105f0565b91505092915050565b6000819050919050565b61064581610632565b82525050565b6000602082019050610660600083018461063c565b92915050565b6000806040838503121561067d5761067c6105c7565b5b600061068b858286016105f0565b925050602061069c858286016105f0565b9150509250929050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610713602e836106a6565b915061071e826106b7565b604082019050919050565b6000602082019050818103600083015261074281610706565b9050919050565b610752816105cc565b82525050565b600060208201905061076d6000830184610749565b92915050565b6000819050919050565b6000819050919050565b60006107a261079d61079884610773565b61077d565b6105cc565b9050919050565b6107b281610787565b82525050565b60006020820190506107cd60008301846107a9565b92915050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b600061082f602b836106a6565b915061083a826107d3565b604082019050919050565b6000602082019050818103600083015261085e81610822565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061089f82610632565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156108d2576108d1610865565b5b600182019050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b60006109396027836106a6565b9150610944826108dd565b604082019050919050565b600060208201905081810360008301526109688161092c565b905091905056fea2646970667358221220331c3a0bd109e59750ea7717b9d9c12193d51b23b48fdc1cc516f3ce72e8e38d64736f6c63430008090033";
