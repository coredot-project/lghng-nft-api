/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { UintToUintMapMock } from "../UintToUintMapMock";

export class UintToUintMapMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<UintToUintMapMock> {
    return super.deploy(overrides || {}) as Promise<UintToUintMapMock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UintToUintMapMock {
    return super.attach(address) as UintToUintMapMock;
  }
  connect(signer: Signer): UintToUintMapMock__factory {
    return super.connect(signer) as UintToUintMapMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UintToUintMapMock {
    return new Contract(address, _abi, signerOrProvider) as UintToUintMapMock;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    name: "OperationResult",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "at",
    outputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "errorMessage",
        type: "string",
      },
    ],
    name: "getWithMessage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
    ],
    name: "tryGet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d36806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639507d39a1161005b5780639507d39a14610114578063c051a3a614610144578063c34052e014610174578063e0886f90146101a457610088565b80631ab06ee51461008d5780631f7b6d32146100a95780634cc82215146100c7578063871394d9146100e3575b600080fd5b6100a760048036038101906100a29190610934565b6101d5565b005b6100b161022b565b6040516100be9190610983565b60405180910390f35b6100e160048036038101906100dc919061099e565b61023c565b005b6100fd60048036038101906100f8919061099e565b61028f565b60405161010b9291906109e6565b60405180910390f35b61012e6004803603810190610129919061099e565b6102af565b60405161013b9190610983565b60405180910390f35b61015e60048036038101906101599190610a74565b6102cc565b60405161016b9190610983565b60405180910390f35b61018e6004803603810190610189919061099e565b610331565b60405161019b9190610ad4565b60405180910390f35b6101be60048036038101906101b9919061099e565b61034e565b6040516101cc929190610aef565b60405180910390f35b60006101ed8383600061036e9092919063ffffffff16565b90507fed9840e0775590557ad736875d96c95cf1458b766335f74339951a32c82a9e338160405161021e9190610ad4565b60405180910390a1505050565b6000610237600061038d565b905090565b60006102528260006103a290919063ffffffff16565b90507fed9840e0775590557ad736875d96c95cf1458b766335f74339951a32c82a9e33816040516102839190610ad4565b60405180910390a15050565b6000806102a68360006103bc90919063ffffffff16565b91509150915091565b60006102c58260006103e890919063ffffffff16565b9050919050565b60006103288484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505060006104059092919063ffffffff16565b90509392505050565b600061034782600061042490919063ffffffff16565b9050919050565b60008061036583600061043e90919063ffffffff16565b91509150915091565b6000610384846000018460001b8460001b61046a565b90509392505050565b600061039b826000016104a5565b9050919050565b60006103b4836000018360001b6104ba565b905092915050565b6000806000806103d2866000018660001b6104f3565b91509150818160001c9350935050509250929050565b60006103fa836000018360001b610543565b60001c905092915050565b6000610418846000018460001b846105bf565b60001c90509392505050565b6000610436836000018360001b610640565b905092915050565b6000806000806104518660000186610660565b915091508160001c8160001c9350935050509250929050565b6000818460020160008581526020019081526020016000208190555061049c83856000016106a090919063ffffffff16565b90509392505050565b60006104b3826000016106b7565b9050919050565b6000826002016000838152602001908152602001600020600090556104eb82846000016106cc90919063ffffffff16565b905092915050565b60008060008460020160008581526020019081526020016000205490506000801b811415610533576105258585610640565b6000801b925092505061053c565b60018192509250505b9250929050565b6000808360020160008481526020019081526020016000205490506000801b8114158061057657506105758484610640565b5b6105b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ac90610b75565b60405180910390fd5b8091505092915050565b6000808460020160008581526020019081526020016000205490506000801b811415806105f257506105f18585610640565b5b8390610634576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062b9190610c1d565b60405180910390fd5b50809150509392505050565b600061065882846000016106e390919063ffffffff16565b905092915050565b600080600061067b84866000016106fa90919063ffffffff16565b9050808560020160008381526020019081526020016000205492509250509250929050565b60006106af8360000183610711565b905092915050565b60006106c582600001610781565b9050919050565b60006106db8360000183610792565b905092915050565b60006106f283600001836108a6565b905092915050565b600061070983600001836108c9565b905092915050565b600061071d83836108a6565b61077657826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905061077b565b600090505b92915050565b600081600001805490509050919050565b6000808360010160008481526020019081526020016000205490506000811461089a5760006001826107c49190610c6e565b90506000600186600001805490506107dc9190610c6e565b905081811461084b5760008660000182815481106107fd576107fc610ca2565b5b906000526020600020015490508087600001848154811061082157610820610ca2565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b8560000180548061085f5761085e610cd1565b5b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506108a0565b60009150505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b60008260000182815481106108e1576108e0610ca2565b5b9060005260206000200154905092915050565b600080fd5b600080fd5b6000819050919050565b610911816108fe565b811461091c57600080fd5b50565b60008135905061092e81610908565b92915050565b6000806040838503121561094b5761094a6108f4565b5b60006109598582860161091f565b925050602061096a8582860161091f565b9150509250929050565b61097d816108fe565b82525050565b60006020820190506109986000830184610974565b92915050565b6000602082840312156109b4576109b36108f4565b5b60006109c28482850161091f565b91505092915050565b60008115159050919050565b6109e0816109cb565b82525050565b60006040820190506109fb60008301856109d7565b610a086020830184610974565b9392505050565b600080fd5b600080fd5b600080fd5b60008083601f840112610a3457610a33610a0f565b5b8235905067ffffffffffffffff811115610a5157610a50610a14565b5b602083019150836001820283011115610a6d57610a6c610a19565b5b9250929050565b600080600060408486031215610a8d57610a8c6108f4565b5b6000610a9b8682870161091f565b935050602084013567ffffffffffffffff811115610abc57610abb6108f9565b5b610ac886828701610a1e565b92509250509250925092565b6000602082019050610ae960008301846109d7565b92915050565b6000604082019050610b046000830185610974565b610b116020830184610974565b9392505050565b600082825260208201905092915050565b7f456e756d657261626c654d61703a206e6f6e6578697374656e74206b65790000600082015250565b6000610b5f601e83610b18565b9150610b6a82610b29565b602082019050919050565b60006020820190508181036000830152610b8e81610b52565b9050919050565b600081519050919050565b60005b83811015610bbe578082015181840152602081019050610ba3565b83811115610bcd576000848401525b50505050565b6000601f19601f8301169050919050565b6000610bef82610b95565b610bf98185610b18565b9350610c09818560208601610ba0565b610c1281610bd3565b840191505092915050565b60006020820190508181036000830152610c378184610be4565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c79826108fe565b9150610c84836108fe565b925082821015610c9757610c96610c3f565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212201d94f667b6c3070ab93256fb2871957e832857a761d888d8d0b350ec5190398f64736f6c63430008090033";
